################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################
# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: flink-fn-execution.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18\x66link-fn-execution.proto\x12 org.apache.flink.fn_execution.v1\"\x86\x01\n\x05Input\x12\x44\n\x03udf\x18\x01 \x01(\x0b\x32\x35.org.apache.flink.fn_execution.v1.UserDefinedFunctionH\x00\x12\x15\n\x0binputOffset\x18\x02 \x01(\x05H\x00\x12\x17\n\rinputConstant\x18\x03 \x01(\x0cH\x00\x42\x07\n\x05input\"u\n\x13UserDefinedFunction\x12\x0f\n\x07payload\x18\x01 \x01(\x0c\x12\x37\n\x06inputs\x18\x02 \x03(\x0b\x32\'.org.apache.flink.fn_execution.v1.Input\x12\x14\n\x0cwindow_index\x18\x03 \x01(\x05\"\xb2\x01\n\x14UserDefinedFunctions\x12\x43\n\x04udfs\x18\x01 \x03(\x0b\x32\x35.org.apache.flink.fn_execution.v1.UserDefinedFunction\x12\x16\n\x0emetric_enabled\x18\x02 \x01(\x08\x12=\n\x07windows\x18\x03 \x03(\x0b\x32,.org.apache.flink.fn_execution.v1.OverWindow\"\xdd\x02\n\nOverWindow\x12L\n\x0bwindow_type\x18\x01 \x01(\x0e\x32\x37.org.apache.flink.fn_execution.v1.OverWindow.WindowType\x12\x16\n\x0elower_boundary\x18\x02 \x01(\x03\x12\x16\n\x0eupper_boundary\x18\x03 \x01(\x03\"\xd0\x01\n\nWindowType\x12\x13\n\x0fRANGE_UNBOUNDED\x10\x00\x12\x1d\n\x19RANGE_UNBOUNDED_PRECEDING\x10\x01\x12\x1d\n\x19RANGE_UNBOUNDED_FOLLOWING\x10\x02\x12\x11\n\rRANGE_SLIDING\x10\x03\x12\x11\n\rROW_UNBOUNDED\x10\x04\x12\x1b\n\x17ROW_UNBOUNDED_PRECEDING\x10\x05\x12\x1b\n\x17ROW_UNBOUNDED_FOLLOWING\x10\x06\x12\x0f\n\x0bROW_SLIDING\x10\x07\"\xc0\x06\n\x1dUserDefinedDataStreamFunction\x12\x63\n\rfunction_type\x18\x01 \x01(\x0e\x32L.org.apache.flink.fn_execution.v1.UserDefinedDataStreamFunction.FunctionType\x12g\n\x0fruntime_context\x18\x02 \x01(\x0b\x32N.org.apache.flink.fn_execution.v1.UserDefinedDataStreamFunction.RuntimeContext\x12\x0f\n\x07payload\x18\x03 \x01(\x0c\x12\x16\n\x0emetric_enabled\x18\x04 \x01(\x08\x12\x41\n\rkey_type_info\x18\x05 \x01(\x0b\x32*.org.apache.flink.fn_execution.v1.TypeInfo\x1a*\n\x0cJobParameter\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x1a\xaf\x02\n\x0eRuntimeContext\x12\x11\n\ttask_name\x18\x01 \x01(\t\x12\x1f\n\x17task_name_with_subtasks\x18\x02 \x01(\t\x12#\n\x1bnumber_of_parallel_subtasks\x18\x03 \x01(\x05\x12\'\n\x1fmax_number_of_parallel_subtasks\x18\x04 \x01(\x05\x12\x1d\n\x15index_of_this_subtask\x18\x05 \x01(\x05\x12\x16\n\x0e\x61ttempt_number\x18\x06 \x01(\x05\x12\x64\n\x0ejob_parameters\x18\x07 \x03(\x0b\x32L.org.apache.flink.fn_execution.v1.UserDefinedDataStreamFunction.JobParameter\"\x86\x01\n\x0c\x46unctionType\x12\x07\n\x03MAP\x10\x00\x12\x0c\n\x08\x46LAT_MAP\x10\x01\x12\n\n\x06REDUCE\x10\x02\x12\n\n\x06\x43O_MAP\x10\x03\x12\x0f\n\x0b\x43O_FLAT_MAP\x10\x04\x12\x0b\n\x07PROCESS\x10\x05\x12\x11\n\rKEYED_PROCESS\x10\x06\x12\x16\n\x12TIMESTAMP_ASSIGNER\x10\x07\"\xef\x05\n\x1cUserDefinedAggregateFunction\x12\x0f\n\x07payload\x18\x01 \x01(\x0c\x12\x37\n\x06inputs\x18\x02 \x03(\x0b\x32\'.org.apache.flink.fn_execution.v1.Input\x12Z\n\x05specs\x18\x03 \x03(\x0b\x32K.org.apache.flink.fn_execution.v1.UserDefinedAggregateFunction.DataViewSpec\x12\x12\n\nfilter_arg\x18\x04 \x01(\x05\x12\x10\n\x08\x64istinct\x18\x05 \x01(\x08\x1a\x82\x04\n\x0c\x44\x61taViewSpec\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x66ield_index\x18\x02 \x01(\x05\x12i\n\tlist_view\x18\x03 \x01(\x0b\x32T.org.apache.flink.fn_execution.v1.UserDefinedAggregateFunction.DataViewSpec.ListViewH\x00\x12g\n\x08map_view\x18\x04 \x01(\x0b\x32S.org.apache.flink.fn_execution.v1.UserDefinedAggregateFunction.DataViewSpec.MapViewH\x00\x1aT\n\x08ListView\x12H\n\x0c\x65lement_type\x18\x01 \x01(\x0b\x32\x32.org.apache.flink.fn_execution.v1.Schema.FieldType\x1a\x97\x01\n\x07MapView\x12\x44\n\x08key_type\x18\x01 \x01(\x0b\x32\x32.org.apache.flink.fn_execution.v1.Schema.FieldType\x12\x46\n\nvalue_type\x18\x02 \x01(\x0b\x32\x32.org.apache.flink.fn_execution.v1.Schema.FieldTypeB\x0b\n\tdata_view\"\xb8\x03\n\x1dUserDefinedAggregateFunctions\x12L\n\x04udfs\x18\x01 \x03(\x0b\x32>.org.apache.flink.fn_execution.v1.UserDefinedAggregateFunction\x12\x16\n\x0emetric_enabled\x18\x02 \x01(\x08\x12\x10\n\x08grouping\x18\x03 \x03(\x05\x12\x1e\n\x16generate_update_before\x18\x04 \x01(\x08\x12\x44\n\x08key_type\x18\x05 \x01(\x0b\x32\x32.org.apache.flink.fn_execution.v1.Schema.FieldType\x12\x1b\n\x13index_of_count_star\x18\x06 \x01(\x05\x12\x1e\n\x16state_cleaning_enabled\x18\x07 \x01(\x08\x12\x18\n\x10state_cache_size\x18\x08 \x01(\x05\x12!\n\x19map_state_read_cache_size\x18\t \x01(\x05\x12\"\n\x1amap_state_write_cache_size\x18\n \x01(\x05\x12\x1b\n\x13\x63ount_star_inserted\x18\x0b \x01(\x08\"\xec\x0f\n\x06Schema\x12>\n\x06\x66ields\x18\x01 \x03(\x0b\x32..org.apache.flink.fn_execution.v1.Schema.Field\x1a\x97\x01\n\x07MapInfo\x12\x44\n\x08key_type\x18\x01 \x01(\x0b\x32\x32.org.apache.flink.fn_execution.v1.Schema.FieldType\x12\x46\n\nvalue_type\x18\x02 \x01(\x0b\x32\x32.org.apache.flink.fn_execution.v1.Schema.FieldType\x1a\x1d\n\x08TimeInfo\x12\x11\n\tprecision\x18\x01 \x01(\x05\x1a\"\n\rTimestampInfo\x12\x11\n\tprecision\x18\x01 \x01(\x05\x1a,\n\x17LocalZonedTimestampInfo\x12\x11\n\tprecision\x18\x01 \x01(\x05\x1a\'\n\x12ZonedTimestampInfo\x12\x11\n\tprecision\x18\x01 \x01(\x05\x1a/\n\x0b\x44\x65\x63imalInfo\x12\x11\n\tprecision\x18\x01 \x01(\x05\x12\r\n\x05scale\x18\x02 \x01(\x05\x1a\x1c\n\nBinaryInfo\x12\x0e\n\x06length\x18\x01 \x01(\x05\x1a\x1f\n\rVarBinaryInfo\x12\x0e\n\x06length\x18\x01 \x01(\x05\x1a\x1a\n\x08\x43harInfo\x12\x0e\n\x06length\x18\x01 \x01(\x05\x1a\x1d\n\x0bVarCharInfo\x12\x0e\n\x06length\x18\x01 \x01(\x05\x1a\xb0\x08\n\tFieldType\x12\x44\n\ttype_name\x18\x01 \x01(\x0e\x32\x31.org.apache.flink.fn_execution.v1.Schema.TypeName\x12\x10\n\x08nullable\x18\x02 \x01(\x08\x12U\n\x17\x63ollection_element_type\x18\x03 \x01(\x0b\x32\x32.org.apache.flink.fn_execution.v1.Schema.FieldTypeH\x00\x12\x44\n\x08map_info\x18\x04 \x01(\x0b\x32\x30.org.apache.flink.fn_execution.v1.Schema.MapInfoH\x00\x12>\n\nrow_schema\x18\x05 \x01(\x0b\x32(.org.apache.flink.fn_execution.v1.SchemaH\x00\x12L\n\x0c\x64\x65\x63imal_info\x18\x06 \x01(\x0b\x32\x34.org.apache.flink.fn_execution.v1.Schema.DecimalInfoH\x00\x12\x46\n\ttime_info\x18\x07 \x01(\x0b\x32\x31.org.apache.flink.fn_execution.v1.Schema.TimeInfoH\x00\x12P\n\x0etimestamp_info\x18\x08 \x01(\x0b\x32\x36.org.apache.flink.fn_execution.v1.Schema.TimestampInfoH\x00\x12\x66\n\x1alocal_zoned_timestamp_info\x18\t \x01(\x0b\x32@.org.apache.flink.fn_execution.v1.Schema.LocalZonedTimestampInfoH\x00\x12[\n\x14zoned_timestamp_info\x18\n \x01(\x0b\x32;.org.apache.flink.fn_execution.v1.Schema.ZonedTimestampInfoH\x00\x12J\n\x0b\x62inary_info\x18\x0b \x01(\x0b\x32\x33.org.apache.flink.fn_execution.v1.Schema.BinaryInfoH\x00\x12Q\n\x0fvar_binary_info\x18\x0c \x01(\x0b\x32\x36.org.apache.flink.fn_execution.v1.Schema.VarBinaryInfoH\x00\x12\x46\n\tchar_info\x18\r \x01(\x0b\x32\x31.org.apache.flink.fn_execution.v1.Schema.CharInfoH\x00\x12M\n\rvar_char_info\x18\x0e \x01(\x0b\x32\x34.org.apache.flink.fn_execution.v1.Schema.VarCharInfoH\x00\x42\x0b\n\ttype_info\x1al\n\x05\x46ield\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12@\n\x04type\x18\x03 \x01(\x0b\x32\x32.org.apache.flink.fn_execution.v1.Schema.FieldType\"\xa1\x02\n\x08TypeName\x12\x07\n\x03ROW\x10\x00\x12\x0b\n\x07TINYINT\x10\x01\x12\x0c\n\x08SMALLINT\x10\x02\x12\x07\n\x03INT\x10\x03\x12\n\n\x06\x42IGINT\x10\x04\x12\x0b\n\x07\x44\x45\x43IMAL\x10\x05\x12\t\n\x05\x46LOAT\x10\x06\x12\n\n\x06\x44OUBLE\x10\x07\x12\x08\n\x04\x44\x41TE\x10\x08\x12\x08\n\x04TIME\x10\t\x12\r\n\tTIMESTAMP\x10\n\x12\x0b\n\x07\x42OOLEAN\x10\x0b\x12\n\n\x06\x42INARY\x10\x0c\x12\r\n\tVARBINARY\x10\r\x12\x08\n\x04\x43HAR\x10\x0e\x12\x0b\n\x07VARCHAR\x10\x0f\x12\x0f\n\x0b\x42\x41SIC_ARRAY\x10\x10\x12\x07\n\x03MAP\x10\x11\x12\x0c\n\x08MULTISET\x10\x12\x12\x19\n\x15LOCAL_ZONED_TIMESTAMP\x10\x13\x12\x13\n\x0fZONED_TIMESTAMP\x10\x14\"\x98\x06\n\x08TypeInfo\x12?\n\x05\x66ield\x18\x01 \x03(\x0b\x32\x30.org.apache.flink.fn_execution.v1.TypeInfo.Field\x1a\xc5\x02\n\tFieldType\x12\x46\n\ttype_name\x18\x01 \x01(\x0e\x32\x33.org.apache.flink.fn_execution.v1.TypeInfo.TypeName\x12W\n\x17\x63ollection_element_type\x18\x02 \x01(\x0b\x32\x34.org.apache.flink.fn_execution.v1.TypeInfo.FieldTypeH\x00\x12\x43\n\rrow_type_info\x18\x03 \x01(\x0b\x32*.org.apache.flink.fn_execution.v1.TypeInfoH\x00\x12\x45\n\x0ftuple_type_info\x18\x04 \x01(\x0b\x32*.org.apache.flink.fn_execution.v1.TypeInfoH\x00\x42\x0b\n\ttype_info\x1an\n\x05\x46ield\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x42\n\x04type\x18\x03 \x01(\x0b\x32\x34.org.apache.flink.fn_execution.v1.TypeInfo.FieldType\"\x92\x02\n\x08TypeName\x12\x07\n\x03ROW\x10\x00\x12\n\n\x06STRING\x10\x01\x12\x08\n\x04\x42YTE\x10\x02\x12\x0b\n\x07\x42OOLEAN\x10\x03\x12\t\n\x05SHORT\x10\x04\x12\x07\n\x03INT\x10\x05\x12\x08\n\x04LONG\x10\x06\x12\t\n\x05\x46LOAT\x10\x07\x12\n\n\x06\x44OUBLE\x10\x08\x12\x08\n\x04\x43HAR\x10\t\x12\x0b\n\x07\x42IG_INT\x10\n\x12\x0b\n\x07\x42IG_DEC\x10\x0b\x12\x0c\n\x08SQL_DATE\x10\x0c\x12\x0c\n\x08SQL_TIME\x10\r\x12\x11\n\rSQL_TIMESTAMP\x10\x0e\x12\x0f\n\x0b\x42\x41SIC_ARRAY\x10\x0f\x12\x11\n\rPICKLED_BYTES\x10\x10\x12\t\n\x05TUPLE\x10\x11\x12\x13\n\x0fPRIMITIVE_ARRAY\x10\x12\x12\x0e\n\nFURY_BYTES\x10\x13\x42-\n\x1forg.apache.flink.fnexecution.v1B\nFlinkFnApib\x06proto3')



_INPUT = DESCRIPTOR.message_types_by_name['Input']
_USERDEFINEDFUNCTION = DESCRIPTOR.message_types_by_name['UserDefinedFunction']
_USERDEFINEDFUNCTIONS = DESCRIPTOR.message_types_by_name['UserDefinedFunctions']
_OVERWINDOW = DESCRIPTOR.message_types_by_name['OverWindow']
_USERDEFINEDDATASTREAMFUNCTION = DESCRIPTOR.message_types_by_name['UserDefinedDataStreamFunction']
_USERDEFINEDDATASTREAMFUNCTION_JOBPARAMETER = _USERDEFINEDDATASTREAMFUNCTION.nested_types_by_name['JobParameter']
_USERDEFINEDDATASTREAMFUNCTION_RUNTIMECONTEXT = _USERDEFINEDDATASTREAMFUNCTION.nested_types_by_name['RuntimeContext']
_USERDEFINEDAGGREGATEFUNCTION = DESCRIPTOR.message_types_by_name['UserDefinedAggregateFunction']
_USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC = _USERDEFINEDAGGREGATEFUNCTION.nested_types_by_name['DataViewSpec']
_USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC_LISTVIEW = _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC.nested_types_by_name['ListView']
_USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC_MAPVIEW = _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC.nested_types_by_name['MapView']
_USERDEFINEDAGGREGATEFUNCTIONS = DESCRIPTOR.message_types_by_name['UserDefinedAggregateFunctions']
_SCHEMA = DESCRIPTOR.message_types_by_name['Schema']
_SCHEMA_MAPINFO = _SCHEMA.nested_types_by_name['MapInfo']
_SCHEMA_TIMEINFO = _SCHEMA.nested_types_by_name['TimeInfo']
_SCHEMA_TIMESTAMPINFO = _SCHEMA.nested_types_by_name['TimestampInfo']
_SCHEMA_LOCALZONEDTIMESTAMPINFO = _SCHEMA.nested_types_by_name['LocalZonedTimestampInfo']
_SCHEMA_ZONEDTIMESTAMPINFO = _SCHEMA.nested_types_by_name['ZonedTimestampInfo']
_SCHEMA_DECIMALINFO = _SCHEMA.nested_types_by_name['DecimalInfo']
_SCHEMA_BINARYINFO = _SCHEMA.nested_types_by_name['BinaryInfo']
_SCHEMA_VARBINARYINFO = _SCHEMA.nested_types_by_name['VarBinaryInfo']
_SCHEMA_CHARINFO = _SCHEMA.nested_types_by_name['CharInfo']
_SCHEMA_VARCHARINFO = _SCHEMA.nested_types_by_name['VarCharInfo']
_SCHEMA_FIELDTYPE = _SCHEMA.nested_types_by_name['FieldType']
_SCHEMA_FIELD = _SCHEMA.nested_types_by_name['Field']
_TYPEINFO = DESCRIPTOR.message_types_by_name['TypeInfo']
_TYPEINFO_FIELDTYPE = _TYPEINFO.nested_types_by_name['FieldType']
_TYPEINFO_FIELD = _TYPEINFO.nested_types_by_name['Field']
_OVERWINDOW_WINDOWTYPE = _OVERWINDOW.enum_types_by_name['WindowType']
_USERDEFINEDDATASTREAMFUNCTION_FUNCTIONTYPE = _USERDEFINEDDATASTREAMFUNCTION.enum_types_by_name['FunctionType']
_SCHEMA_TYPENAME = _SCHEMA.enum_types_by_name['TypeName']
_TYPEINFO_TYPENAME = _TYPEINFO.enum_types_by_name['TypeName']
Input = _reflection.GeneratedProtocolMessageType('Input', (_message.Message,), {
  'DESCRIPTOR' : _INPUT,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Input)
  })
_sym_db.RegisterMessage(Input)

UserDefinedFunction = _reflection.GeneratedProtocolMessageType('UserDefinedFunction', (_message.Message,), {
  'DESCRIPTOR' : _USERDEFINEDFUNCTION,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedFunction)
  })
_sym_db.RegisterMessage(UserDefinedFunction)

UserDefinedFunctions = _reflection.GeneratedProtocolMessageType('UserDefinedFunctions', (_message.Message,), {
  'DESCRIPTOR' : _USERDEFINEDFUNCTIONS,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedFunctions)
  })
_sym_db.RegisterMessage(UserDefinedFunctions)

OverWindow = _reflection.GeneratedProtocolMessageType('OverWindow', (_message.Message,), {
  'DESCRIPTOR' : _OVERWINDOW,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.OverWindow)
  })
_sym_db.RegisterMessage(OverWindow)

UserDefinedDataStreamFunction = _reflection.GeneratedProtocolMessageType('UserDefinedDataStreamFunction', (_message.Message,), {

  'JobParameter' : _reflection.GeneratedProtocolMessageType('JobParameter', (_message.Message,), {
    'DESCRIPTOR' : _USERDEFINEDDATASTREAMFUNCTION_JOBPARAMETER,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedDataStreamFunction.JobParameter)
    })
  ,

  'RuntimeContext' : _reflection.GeneratedProtocolMessageType('RuntimeContext', (_message.Message,), {
    'DESCRIPTOR' : _USERDEFINEDDATASTREAMFUNCTION_RUNTIMECONTEXT,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedDataStreamFunction.RuntimeContext)
    })
  ,
  'DESCRIPTOR' : _USERDEFINEDDATASTREAMFUNCTION,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedDataStreamFunction)
  })
_sym_db.RegisterMessage(UserDefinedDataStreamFunction)
_sym_db.RegisterMessage(UserDefinedDataStreamFunction.JobParameter)
_sym_db.RegisterMessage(UserDefinedDataStreamFunction.RuntimeContext)

UserDefinedAggregateFunction = _reflection.GeneratedProtocolMessageType('UserDefinedAggregateFunction', (_message.Message,), {

  'DataViewSpec' : _reflection.GeneratedProtocolMessageType('DataViewSpec', (_message.Message,), {

    'ListView' : _reflection.GeneratedProtocolMessageType('ListView', (_message.Message,), {
      'DESCRIPTOR' : _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC_LISTVIEW,
      '__module__' : 'flink_fn_execution_pb2'
      # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedAggregateFunction.DataViewSpec.ListView)
      })
    ,

    'MapView' : _reflection.GeneratedProtocolMessageType('MapView', (_message.Message,), {
      'DESCRIPTOR' : _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC_MAPVIEW,
      '__module__' : 'flink_fn_execution_pb2'
      # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedAggregateFunction.DataViewSpec.MapView)
      })
    ,
    'DESCRIPTOR' : _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedAggregateFunction.DataViewSpec)
    })
  ,
  'DESCRIPTOR' : _USERDEFINEDAGGREGATEFUNCTION,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedAggregateFunction)
  })
_sym_db.RegisterMessage(UserDefinedAggregateFunction)
_sym_db.RegisterMessage(UserDefinedAggregateFunction.DataViewSpec)
_sym_db.RegisterMessage(UserDefinedAggregateFunction.DataViewSpec.ListView)
_sym_db.RegisterMessage(UserDefinedAggregateFunction.DataViewSpec.MapView)

UserDefinedAggregateFunctions = _reflection.GeneratedProtocolMessageType('UserDefinedAggregateFunctions', (_message.Message,), {
  'DESCRIPTOR' : _USERDEFINEDAGGREGATEFUNCTIONS,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.UserDefinedAggregateFunctions)
  })
_sym_db.RegisterMessage(UserDefinedAggregateFunctions)

Schema = _reflection.GeneratedProtocolMessageType('Schema', (_message.Message,), {

  'MapInfo' : _reflection.GeneratedProtocolMessageType('MapInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_MAPINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.MapInfo)
    })
  ,

  'TimeInfo' : _reflection.GeneratedProtocolMessageType('TimeInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_TIMEINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.TimeInfo)
    })
  ,

  'TimestampInfo' : _reflection.GeneratedProtocolMessageType('TimestampInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_TIMESTAMPINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.TimestampInfo)
    })
  ,

  'LocalZonedTimestampInfo' : _reflection.GeneratedProtocolMessageType('LocalZonedTimestampInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_LOCALZONEDTIMESTAMPINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.LocalZonedTimestampInfo)
    })
  ,

  'ZonedTimestampInfo' : _reflection.GeneratedProtocolMessageType('ZonedTimestampInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_ZONEDTIMESTAMPINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.ZonedTimestampInfo)
    })
  ,

  'DecimalInfo' : _reflection.GeneratedProtocolMessageType('DecimalInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_DECIMALINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.DecimalInfo)
    })
  ,

  'BinaryInfo' : _reflection.GeneratedProtocolMessageType('BinaryInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_BINARYINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.BinaryInfo)
    })
  ,

  'VarBinaryInfo' : _reflection.GeneratedProtocolMessageType('VarBinaryInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_VARBINARYINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.VarBinaryInfo)
    })
  ,

  'CharInfo' : _reflection.GeneratedProtocolMessageType('CharInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_CHARINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.CharInfo)
    })
  ,

  'VarCharInfo' : _reflection.GeneratedProtocolMessageType('VarCharInfo', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_VARCHARINFO,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.VarCharInfo)
    })
  ,

  'FieldType' : _reflection.GeneratedProtocolMessageType('FieldType', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_FIELDTYPE,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.FieldType)
    })
  ,

  'Field' : _reflection.GeneratedProtocolMessageType('Field', (_message.Message,), {
    'DESCRIPTOR' : _SCHEMA_FIELD,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema.Field)
    })
  ,
  'DESCRIPTOR' : _SCHEMA,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.Schema)
  })
_sym_db.RegisterMessage(Schema)
_sym_db.RegisterMessage(Schema.MapInfo)
_sym_db.RegisterMessage(Schema.TimeInfo)
_sym_db.RegisterMessage(Schema.TimestampInfo)
_sym_db.RegisterMessage(Schema.LocalZonedTimestampInfo)
_sym_db.RegisterMessage(Schema.ZonedTimestampInfo)
_sym_db.RegisterMessage(Schema.DecimalInfo)
_sym_db.RegisterMessage(Schema.BinaryInfo)
_sym_db.RegisterMessage(Schema.VarBinaryInfo)
_sym_db.RegisterMessage(Schema.CharInfo)
_sym_db.RegisterMessage(Schema.VarCharInfo)
_sym_db.RegisterMessage(Schema.FieldType)
_sym_db.RegisterMessage(Schema.Field)

TypeInfo = _reflection.GeneratedProtocolMessageType('TypeInfo', (_message.Message,), {

  'FieldType' : _reflection.GeneratedProtocolMessageType('FieldType', (_message.Message,), {
    'DESCRIPTOR' : _TYPEINFO_FIELDTYPE,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.TypeInfo.FieldType)
    })
  ,

  'Field' : _reflection.GeneratedProtocolMessageType('Field', (_message.Message,), {
    'DESCRIPTOR' : _TYPEINFO_FIELD,
    '__module__' : 'flink_fn_execution_pb2'
    # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.TypeInfo.Field)
    })
  ,
  'DESCRIPTOR' : _TYPEINFO,
  '__module__' : 'flink_fn_execution_pb2'
  # @@protoc_insertion_point(class_scope:org.apache.flink.fn_execution.v1.TypeInfo)
  })
_sym_db.RegisterMessage(TypeInfo)
_sym_db.RegisterMessage(TypeInfo.FieldType)
_sym_db.RegisterMessage(TypeInfo.Field)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\037org.apache.flink.fnexecution.v1B\nFlinkFnApi'
  _INPUT._serialized_start=63
  _INPUT._serialized_end=197
  _USERDEFINEDFUNCTION._serialized_start=199
  _USERDEFINEDFUNCTION._serialized_end=316
  _USERDEFINEDFUNCTIONS._serialized_start=319
  _USERDEFINEDFUNCTIONS._serialized_end=497
  _OVERWINDOW._serialized_start=500
  _OVERWINDOW._serialized_end=849
  _OVERWINDOW_WINDOWTYPE._serialized_start=641
  _OVERWINDOW_WINDOWTYPE._serialized_end=849
  _USERDEFINEDDATASTREAMFUNCTION._serialized_start=852
  _USERDEFINEDDATASTREAMFUNCTION._serialized_end=1684
  _USERDEFINEDDATASTREAMFUNCTION_JOBPARAMETER._serialized_start=1199
  _USERDEFINEDDATASTREAMFUNCTION_JOBPARAMETER._serialized_end=1241
  _USERDEFINEDDATASTREAMFUNCTION_RUNTIMECONTEXT._serialized_start=1244
  _USERDEFINEDDATASTREAMFUNCTION_RUNTIMECONTEXT._serialized_end=1547
  _USERDEFINEDDATASTREAMFUNCTION_FUNCTIONTYPE._serialized_start=1550
  _USERDEFINEDDATASTREAMFUNCTION_FUNCTIONTYPE._serialized_end=1684
  _USERDEFINEDAGGREGATEFUNCTION._serialized_start=1687
  _USERDEFINEDAGGREGATEFUNCTION._serialized_end=2438
  _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC._serialized_start=1924
  _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC._serialized_end=2438
  _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC_LISTVIEW._serialized_start=2187
  _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC_LISTVIEW._serialized_end=2271
  _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC_MAPVIEW._serialized_start=2274
  _USERDEFINEDAGGREGATEFUNCTION_DATAVIEWSPEC_MAPVIEW._serialized_end=2425
  _USERDEFINEDAGGREGATEFUNCTIONS._serialized_start=2441
  _USERDEFINEDAGGREGATEFUNCTIONS._serialized_end=2881
  _SCHEMA._serialized_start=2884
  _SCHEMA._serialized_end=4912
  _SCHEMA_MAPINFO._serialized_start=2959
  _SCHEMA_MAPINFO._serialized_end=3110
  _SCHEMA_TIMEINFO._serialized_start=3112
  _SCHEMA_TIMEINFO._serialized_end=3141
  _SCHEMA_TIMESTAMPINFO._serialized_start=3143
  _SCHEMA_TIMESTAMPINFO._serialized_end=3177
  _SCHEMA_LOCALZONEDTIMESTAMPINFO._serialized_start=3179
  _SCHEMA_LOCALZONEDTIMESTAMPINFO._serialized_end=3223
  _SCHEMA_ZONEDTIMESTAMPINFO._serialized_start=3225
  _SCHEMA_ZONEDTIMESTAMPINFO._serialized_end=3264
  _SCHEMA_DECIMALINFO._serialized_start=3266
  _SCHEMA_DECIMALINFO._serialized_end=3313
  _SCHEMA_BINARYINFO._serialized_start=3315
  _SCHEMA_BINARYINFO._serialized_end=3343
  _SCHEMA_VARBINARYINFO._serialized_start=3345
  _SCHEMA_VARBINARYINFO._serialized_end=3376
  _SCHEMA_CHARINFO._serialized_start=3378
  _SCHEMA_CHARINFO._serialized_end=3404
  _SCHEMA_VARCHARINFO._serialized_start=3406
  _SCHEMA_VARCHARINFO._serialized_end=3435
  _SCHEMA_FIELDTYPE._serialized_start=3438
  _SCHEMA_FIELDTYPE._serialized_end=4510
  _SCHEMA_FIELD._serialized_start=4512
  _SCHEMA_FIELD._serialized_end=4620
  _SCHEMA_TYPENAME._serialized_start=4623
  _SCHEMA_TYPENAME._serialized_end=4912
  _TYPEINFO._serialized_start=4915
  _TYPEINFO._serialized_end=5707
  _TYPEINFO_FIELDTYPE._serialized_start=4993
  _TYPEINFO_FIELDTYPE._serialized_end=5318
  _TYPEINFO_FIELD._serialized_start=5320
  _TYPEINFO_FIELD._serialized_end=5430
  _TYPEINFO_TYPENAME._serialized_start=5433
  _TYPEINFO_TYPENAME._serialized_end=5707
# @@protoc_insertion_point(module_scope)
